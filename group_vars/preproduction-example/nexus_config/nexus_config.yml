---
nexus_timezone: 'Asia/Bangkok'  # java timezone

nexus_backup_configure: true  # Shall we configure backup ?
## For next schedule vars, see related schedule tasks settings
## https://github.com/ansible-ThoTeam/nexus3-oss/wiki/Scheduled-tasks-configuration#schedule-types-and-related-settings
nexus_backup_schedule_type: daily
# nexus_backup_cron: "0 0 21 * * ?"  # See cron expression in nexus create task GUI
nexus_backup_start_date_time: "2019-12-31T00:00:00"
# nexus_backup_weekly_days: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT']
# nexus_backup_monthly_days: {{ range(1,32) | list + [999] }}
nexus_backup_rotate: true  # Shall we rotate backups
nexus_backup_rotate_first: false  # Shall we rotate before making the current backup ?
nexus_backup_keep_rotations: 8  # Keep 4 backup rotations by default (current + last 3)

# Nexus admin password to use.
# Note: this should be vault encrypted in your playbook.
nexus_admin_password: 'CHANGEME'

nexus_anonymous_access: false

nexus_public_hostname: 'nexus.example.com'
nexus_public_scheme: https

# How should the role access the API for provisionning
nexus_api_hostname: "{{ nexus_public_hostname }}"
nexus_api_scheme: https
nexus_api_validate_certs: yes
nexus_api_context_path: '/'
nexus_api_port: 443

# security realms
nexus_nuget_api_key_realm: false
nexus_npm_bearer_token_realm: false
nexus_rut_auth_realm: false
# nexus_rut_auth_header: "CUSTOM_HEADER"
nexus_ldap_realm: false
nexus_docker_bearer_token_realm: false

# Enable/disable audit capability
nexus_audit_enabled: true

# email server
nexus_email_server_enabled: true
nexus_email_server_host: "smtp.sendgrid.net"
nexus_email_server_port: 465
nexus_email_server_username: "apikey"
nexus_email_server_password: "CHANGEME"
nexus_email_from_address: "nexus@example.com"
nexus_email_subject_prefix: "[Nexus]"
nexus_email_tls_enabled: true
nexus_email_tls_required: true
nexus_email_ssl_on_connect_enabled: false
nexus_email_ssl_check_server_identity_enabled: false
nexus_email_trust_store_enabled: false

nexus_branding_header: ""
nexus_branding_footer: "Last provisionned {{ ansible_date_time.iso8601 }}"

ldap_connections: []
# example ldap config :
#  - ldap_name: 'My Company LDAP' # used as a key to update the ldap config
#    ldap_protocol: 'ldaps' # ldap or ldaps
#    ldap_hostname: 'ldap.mycompany.com'
#    ldap_port: 636
#    ldap_use_trust_store: false  # Wether or not to use certs in nexus trust store
#    ldap_auth: 'simple' or 'none'
#    ldap_auth_username: 'username' (or DN)   (optional)
#    ldap_auth_password: 'password'           (optional)
#    ldap_search_base: 'dc=mycompany,dc=net'
#    ldap_user_base_dn: 'ou=users'
#    ldap_user_filter: '(cn=*)' # (optional)
#    ldap_user_object_class: 'inetOrgPerson'
#    ldap_user_id_attribute: 'uid'
#    ldap_user_real_name_attribute: 'cn'
#    ldap_user_email_attribute: 'mail'
#    ldap_group_base_dn: 'ou=groups'
#    ldap_group_object_class: 'posixGroup'
#    ldap_group_id_attribute: 'cn'
#    ldap_group_member_attribute: 'memberUid'
#    ldap_group_member_format: '${username}'

nexus_content_selectors:
 - name: registry-required
   description: Required selector for Docker Registry
   search_expression: 'format == "docker" and path =~ "/v2/|/v2/blobs/.*|/v2/search/.*"'
 - name: registry-myapp
   description: Selector for myapp docker login privilege
   search_expression: 'path =^ "/v2/myapp/"'

nexus_privileges:
  - name: nx-registry-required
    description: 'Required privilege for Docker Registry'
    format: 'docker'
    repository: 'docker-registry-private'
    contentSelector: registry-required
    actions:
      - read
  - name: nx-registry-myapp-rw
    description: 'For Docker Image My App RW Privilege'
    format: 'docker'
    repository: 'docker-registry-private'
    contentSelector: registry-myapp
    actions:
      - add
      - browse
      - delete
      - edit
      - read
  - name: nx-registry-myapp-ro
    description: 'For Docker Image My App RO Privilege'
    format: 'docker'
    repository: 'docker-registry-private'
    contentSelector: registry-myapp
    actions:
      - browse
      - read

nexus_roles:
  - id: nx-registry-myapp-rw
    name: nx-registry-myapp-rw
    description: Role to My App Docker Registry Pull and Push
    privileges:
      - nx-registry-required
      - nx-registry-myapp-rw
    roles: []
  - id: nx-registry-myapp-ro
    name: nx-registry-myapp-ro
    description: Role to My App Docker Registry Pull Only
    privileges:
      - nx-registry-required
      - nx-registry-myapp-ro
    roles: []

nexus_local_users:
  - username: registry-myapp-rw
    first_name: Registry
    last_name: My App RW
    email: registry-myapp-rw@example.com
    password: "CHANGEME"
    roles:
      - nx-registry-myapp-rw
  - username: registry-myapp-ro
    first_name: Registry
    last_name: My App RO
    email: registry-myapp-ro@example.com
    password: "CHANGEME"
    roles:
      - nx-registry-myapp-ro

nexus_ldap_users: []
# example user
#  - username: j.doe
#    state: present
#    roles:
#      - "nx-admin"


nexus_config_pypi: false
nexus_config_docker: true
nexus_config_raw: false
nexus_config_rubygems: false
nexus_config_bower: false
nexus_config_npm: false
nexus_config_nuget: false
nexus_config_gitlfs: false
nexus_config_yum: false
nexus_config_apt: false


nexus_blobstores: []
# example blobstore item :
# - name: separate-storage
#   type: file
#   path: /mnt/custom/path
# - name: s3-blobstore
#   type: S3
#   config:
#     bucket: s3-blobstore
#     accessKeyId: "{{ VAULT_ENCRYPTED_KEY_ID }}"
#     secretAccessKey: "{{ VAULT_ENCRYPTED_ACCESS_KEY }}"

# Cleanup Polices
nexus_repos_cleanup_policies: []
#   - name: mvn_cleanup
#     format: maven2
#     mode:
#     notes: ""
#     criteria:
#       lastBlobUpdated: 60  # Optional
#       lastDownloaded: 120  # Optional
#       preRelease: RELEASES # Optional: PRERELEASES or RELEASES
#       regexKey: "foo.*"    # Optional


# nexus_repos_maven_proxy:
#   - name: central
#     remote_url: 'https://repo1.maven.org/maven2/'
#     layout_policy: permissive
#     # maximum_component_age: -1
#     # maximum_metadata_age: 1440
#     # negative_cache_enabled: true
#     # negative_cache_ttl: 1440
#   - name: jboss
#     remote_url: 'https://repository.jboss.org/nexus/content/groups/public-jboss/'
#     # maximum_component_age: -1
#     # maximum_metadata_age: 1440
#     # negative_cache_enabled: true
#     # negative_cache_ttl: 1440

# nexus_repos_maven_hosted:
#   - name: private-release
#     version_policy: release
#     write_policy: allow_once  # one of "allow", "allow_once" or "deny"

# nexus_repos_maven_group:
#   - name: public
#     member_repos:
#       - central
#       - jboss

# Scheduled tasks
# Note: these are tasks you define by yourself (default: none)
# If you used `nexus_backup_configure: true` above you will see a scheduled task for this
# in your GUI which is not part of the below list
nexus_scheduled_tasks: []
#  #  Example task to compact blobstore :
#  - name: compact-docker-blobstore
#    cron: '0 0 22 * * ?'
#    typeId: blobstore.compact
#    task_alert_email: alerts@example.org  # optional
#    taskProperties:
#      blobstoreName: {{ nexus_blob_names.docker.blob }} # all task attributes are stored as strings by nexus internally
#  #  Example task to purge maven snapshots
#  - name: Purge-maven-snapshots
#    cron: '0 50 23 * * ?'
#    typeId: repository.maven.remove-snapshots
#    task_alert_email: alerts@example.org  # optional
#    taskProperties:
#      repositoryName: "*"  # * for all repos. Change to a repository name if you only want a specific one
#      minimumRetained: "2"
#      snapshotRetentionDays: "2"
#      gracePeriodInDays: "2"
#    booleanTaskProperties:
#      removeIfReleased: true
#  #  Example task to purge unused docker manifest and images
#  - name: Purge unused docker manifests and images
#    cron: '0 55 23 * * ?'
#    typeId: "repository.docker.gc"
#    task_alert_email: alerts@example.org  # optional
#    taskProperties:
#      repositoryName: "*"  # * for all repos. Change to a repository name if you only want a specific one
#  #  Example task to purge incomplete docker uploads
#  - name: Purge incomplete docker uploads
#    cron: '0 0 0 * * ?'
#    typeId: "repository.docker.upload-purge"
#    task_alert_email: alerts@example.org  # optional
#    taskProperties:
#      age: "24"


nexus_repos_pypi_hosted:
  - name: pypi-internal
    version_policy: release
    write_policy: allow  # one of "allow", "allow_once" or "deny"

nexus_repos_pypi_group:
  - name: pypi-all
    member_repos:
      - pypi-internal
      - pypi

nexus_repos_pypi_proxy:
  - name: pypi
    remote_url: 'https://pypi.python.org/'
    # maximum_component_age: 1440
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440


nexus_repos_raw_proxy:
  - name: ubuntu-archive
    remote_url: 'http://archive.ubuntu.com/ubuntu/'
    # maximum_component_age: 1440
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440

nexus_repos_raw_hosted:
  - name: raw-internal
    version_policy: release
    write_policy: allow_once  # one of "allow", "allow_once" or "deny"

nexus_repos_raw_group:
  - name: raw-all
    member_repos:
      - raw-internal
      - ubuntu-archive


nexus_repos_docker_hosted:
  - name: docker-registry-private
    http_port: 5000
    v1_enabled: False

nexus_repos_docker_proxy:
  - name: docker-registry-mirror
    http_port: 5001
    v1_enabled: False
    index_type: "HUB"
    remote_url: "https://registry-1.docker.io"
    # use_nexus_certificates_to_access_index: false
    # cache_foreign_layers: true
    # foreign_layer_url_whitelist:
    #   - "https?://go\\.microsoft\\.com/.*"
    #   - "https://.*\\.azurecr\\.io/.*"
    # maximum_component_age: 1440
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440

# nexus_repos_docker_group:
#   - name: docker-group
#     http_port: "{{ nexus_docker_group_port }}"
#     v1_enabled: True
#     member_repos:
#       - docker-hosted
#       - docker-proxy


nexus_repos_rubygems_hosted:
  - name: rubygems-hosted
    blob_store: "{{ nexus_blob_names.ruby.blob }}"

nexus_repos_rubygems_group:
  - name: rubygems
    blob_store: "{{ nexus_blob_names.ruby.blob }}"
    member_repos:
      - rubygems-hosted
      - rubygems-proxy

nexus_repos_rubygems_proxy:
  - name: rubygems-proxy
    blob_store: "{{ nexus_blob_names.ruby.blob }}"
    remote_url: https://rubygems.org
    # maximum_component_age: 1440
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440


nexus_repos_bower_hosted:
  - name: bower-internal
    blob_store: "{{ nexus_blob_names.bower.blob }}"

nexus_repos_bower_group:
  - name: bower-all
    blob_store: "{{ nexus_blob_names.bower.blob }}"
    member_repos:
      - bower-internal
      - bower-proxy

nexus_repos_bower_proxy:
  - name: bower-proxy
    blob_store: "{{ nexus_blob_names.bower.blob }}"
    remote_url: http://bower.herokuapp.com
    # maximum_component_age: 1440
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440


nexus_repos_npm_hosted:
  - name: npm-internal
    blob_store: "{{ nexus_blob_names.npm.blob }}"

nexus_repos_npm_group:
  - name: npm-all
    blob_store: "{{ nexus_blob_names.npm.blob }}"
    member_repos:
      - npm-internal
      - npm-proxy

nexus_repos_npm_proxy:
  - name: npm-proxy
    blob_store: "{{ nexus_blob_names.npm.blob }}"
    remote_url: https://registry.npmjs.org
    # maximum_component_age: 1440
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440


nexus_repos_nuget_hosted:
  - name: nuget-internal
    blob_store: "{{ nexus_blob_names.nuget.blob }}"

nexus_repos_nuget_group:
  - name: nuget-all
    blob_store: "{{ nexus_blob_names.nuget.blob }}"
    member_repos:
      - nuget-internal
      - nuget-proxy

nexus_repos_nuget_proxy:
  - name: nuget-proxy
    blob_store: "{{ nexus_blob_names.nuget.blob }}"
    remote_url: http://www.nuget.org/api/v2
    # maximum_component_age: 1440
    # maximum_metadata_age: 1440
    # negative_cache_enabled: true
    # negative_cache_ttl: 1440


nexus_repos_gitlfs_hosted:
  - name: gitlfs-internal
    blob_store: "{{ nexus_blob_names.gitlfs.blob }}"

# yum support ...
nexus_repos_yum_hosted: []
nexus_repos_yum_proxy: []
# Example for epel centos-7 x86_64
# - name: epel_centos_7_x86_64
#   remote_url: http://download.fedoraproject.org/pub/epel/7/x86_64
#   # maximum_component_age: 1440
#   # maximum_metadata_age: 1440
#   # negative_cache_enabled: true
#   # negative_cache_ttl: 1440
nexus_repos_yum_group: []


nexus_repos_apt_hosted: []
# - name: private_apt_centos_7
#   distribution: jessie
#   keypair: |-
#     -----BEGIN PGP PRIVATE KEY BLOCK-----
#
#     lQWGBF2Ym3ABDACtu4R3enO2TehVslkRXc4ZcMkaAMIcJgOLo/IQBUnN8dInGLFR
#     ...
#     -----END PGP PRIVATE KEY BLOCK-----
#   passphrase: "none"
nexus_repos_apt_proxy: []
# - name: apt_centos_7_x86_64
#   remote_url: http://download.fedoraproject.org/pub/epel/7/x86_64
#   distribution: jessie
#   flat: true
